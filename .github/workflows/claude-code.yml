name: Claude Code Action

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run Biome format check
      run: npx @biomejs/biome check ./src
      
    - name: Type check
      run: npx tsc --noEmit
      
    - name: Build for production
      run: npm run build
      
    - name: Build for GitHub Pages
      run: npm run build:github
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-output
        path: out/
        retention-days: 7

  claude-code-integration:
    runs-on: ubuntu-latest
    needs: code-quality
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Claude Code Review
      uses: anthropics/claude-code-action@v1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        claude_access_token: ${{ secrets.CLAUDE_ACCESS_TOKEN }}
        claude_refresh_token: ${{ secrets.CLAUDE_REFRESH_TOKEN }}
        claude_expires_at: ${{ secrets.CLAUDE_EXPIRES_AT }}
        review-mode: 'comprehensive'
        focus-areas: 'security,performance,maintainability'
        
    - name: Comment PR with Claude insights
      uses: anthropics/claude-code-comment@v1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        claude_access_token: ${{ secrets.CLAUDE_ACCESS_TOKEN }}
        claude_refresh_token: ${{ secrets.CLAUDE_REFRESH_TOKEN }}
        claude_expires_at: ${{ secrets.CLAUDE_EXPIRES_AT }}
        pr-number: ${{ github.event.number }}

  deploy:
    runs-on: ubuntu-latest
    needs: code-quality
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    permissions:
      contents: read
      pages: write
      id-token: write
      
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for GitHub Pages
      run: npm run build:github
      env:
        GITHUB_PAGES: true
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: out/
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4